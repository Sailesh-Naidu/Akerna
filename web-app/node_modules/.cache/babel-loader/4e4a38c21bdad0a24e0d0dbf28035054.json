{"ast":null,"code":"import React from'react';import styles from'../styles/style.module.css';import{faTimes}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{useSelector,useDispatch}from'react-redux';import{resetState,fetchAllDrinks}from\"../redux/drinks_actions\";import Option from\"./_includes/Options\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Response=function Response(){var _useSelector=useSelector(function(_ref){var drinks=_ref.drinks;return drinks;}),response=_useSelector.response,selectedDrink=_useSelector.selectedDrink,quantity=_useSelector.quantity;var dispatch=useDispatch();var handleStateReset=function handleStateReset(){dispatch(resetState());dispatch(fetchAllDrinks());};if(response){var messageColor=\"text-green-500 font-bold\";if(response.alert==\"green\"){messageColor=\"text-green-500 font-bold\";}else if(response.alert==\"red\"){messageColor=\"text-red-500 font-bold\";}else if(response.alert==\"amber\"){messageColor=\"text-pink-500 font-bold\";}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.overlay,\" absolute left-0 top-0 w-full min-h-screen z-10\")}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-side-menu bg-white absolute p-8 pb-6 right-0 top-0 w-full lg:w-2/5 min-h-screen z-20 border-0 border-r border-algo-gray-101\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-24 border-b-4 border-gray-50\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl font-bold text-gray-500\",children:\"Caffeine Safety Level Response\"}),/*#__PURE__*/_jsx(FontAwesomeIcon,{onClick:handleStateReset,\"data-testid\":\"close\",className:\"float-right text-2xl text-pink-500 cursor-pointer\",icon:faTimes})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:/*#__PURE__*/_jsxs(\"span\",{className:messageColor,children:[\"  \",response.message,\" \"]})})]})})]});}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default Response;","map":{"version":3,"sources":["/Users/saileshpola/Downloads/akerna-caffeine-app/web-app/src/components/Response.js"],"names":["React","styles","faTimes","FontAwesomeIcon","useSelector","useDispatch","resetState","fetchAllDrinks","Option","Response","drinks","response","selectedDrink","quantity","dispatch","handleStateReset","messageColor","alert","overlay","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,OAAT,KAAwB,mCAAxB,CACA,OAASC,eAAT,KAA+B,gCAA/B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,UAAR,CAAoBC,cAApB,KAAyC,yBAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,iBAA4CL,WAAW,CAAC,kBAAEM,CAAAA,MAAF,MAAEA,MAAF,OAAcA,CAAAA,MAAd,EAAD,CAAvD,CAAOC,QAAP,cAAOA,QAAP,CAAiBC,aAAjB,cAAiBA,aAAjB,CAAgCC,QAAhC,cAAgCA,QAAhC,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BD,QAAQ,CAACR,UAAU,EAAX,CAAR,CACAQ,QAAQ,CAACP,cAAc,EAAf,CAAR,CACD,CAHD,CAKA,GAAII,QAAJ,CAAc,CACZ,GAAIK,CAAAA,YAAY,CAAG,0BAAnB,CACA,GAAIL,QAAQ,CAACM,KAAT,EAAkB,OAAtB,CAA+B,CAC7BD,YAAY,CAAG,0BAAf,CACD,CAFD,IAEO,IAAIL,QAAQ,CAACM,KAAT,EAAkB,KAAtB,CAA6B,CAClCD,YAAY,CAAG,wBAAf,CACD,CAFM,IAEA,IAAIL,QAAQ,CAACM,KAAT,EAAkB,OAAtB,CAA+B,CACpCD,YAAY,CAAG,yBAAf,CACD,CACD,mBACE,oCACE,YAAK,SAAS,WAAKf,MAAM,CAACiB,OAAZ,mDAAd,EADF,cAEE,YAAK,SAAS,CAAC,oIAAf,uBACE,aAAK,SAAS,CAAC,gCAAf,wBACE,kCACE,aAAM,SAAS,CAAC,iCAAhB,4CADF,cAEE,KAAC,eAAD,EAAiB,OAAO,CAAEH,gBAA1B,CAA4C,cAAY,OAAxD,CAAgE,SAAS,CAAC,mDAA1E,CAA8H,IAAI,CAAEb,OAApI,EAFF,GADF,cAKM,UAAG,SAAS,CAAC,4BAAb,uBAA0C,cAAM,SAAS,CAAEc,YAAjB,gBAAkCL,QAAQ,CAACQ,OAA3C,OAA1C,EALN,GADF,EAFF,GADF,CAcD,CAvBD,IAuBO,CACL,mBACE,cADF,CAGD,CACF,CArCD,CAuCA,cAAeV,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport styles from '../styles/style.module.css'\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport {resetState, fetchAllDrinks} from \"../redux/drinks_actions\";\nimport Option from \"./_includes/Options\";\n\nconst Response = () => {\n  const {response, selectedDrink, quantity} = useSelector(({drinks}) => drinks)\n  const dispatch = useDispatch();\n\n  const handleStateReset = () => {\n    dispatch(resetState())\n    dispatch(fetchAllDrinks())\n  }\n\n  if (response) {\n    let messageColor = \"text-green-500 font-bold\";\n    if (response.alert == \"green\") {\n      messageColor = \"text-green-500 font-bold\";\n    } else if (response.alert == \"red\") {\n      messageColor = \"text-red-500 font-bold\";\n    } else if (response.alert == \"amber\") {\n      messageColor = \"text-pink-500 font-bold\";\n    }\n    return (\n      <div>\n        <div className={`${styles.overlay} absolute left-0 top-0 w-full min-h-screen z-10`} />\n        <div className=\"mobile-side-menu bg-white absolute p-8 pb-6 right-0 top-0 w-full lg:w-2/5 min-h-screen z-20 border-0 border-r border-algo-gray-101\">\n          <div className=\"h-24 border-b-4 border-gray-50\">\n            <p>\n              <span className=\"text-xl font-bold text-gray-500\">Caffeine Safety Level Response</span>\n              <FontAwesomeIcon onClick={handleStateReset} data-testid=\"close\" className=\"float-right text-2xl text-pink-500 cursor-pointer\" icon={faTimes} />\n            </p>\n                <p className=\"text-xs text-gray-500 mt-1\"><span className={messageColor}>  {response.message} </span></p>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div />\n    )\n  }\n}\n\nexport default Response\n"]},"metadata":{},"sourceType":"module"}